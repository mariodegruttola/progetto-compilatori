<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE ProgramOP SYSTEM "roles.dtd">
<ProgramOP>
    <ProcOp>
        <Identifier>somma</Identifier>
        <ParDeclOp>
            <Type>int</Type>
            <Identifier>x</Identifier>
            <Identifier>y</Identifier>
        </ParDeclOp>
        <ResultType>int</ResultType>
        <ProcBodyOp>
            <AddOp>
                <Identifier>x</Identifier>
                <Identifier>y</Identifier>
            </AddOp>
        </ProcBodyOp>
    </ProcOp>
    <ProcOp>
        <Identifier>moltiplica</Identifier>
        <ParDeclOp>
            <Type>int</Type>
            <Identifier>x</Identifier>
            <Identifier>y</Identifier>
        </ParDeclOp>
        <ResultType>int</ResultType>
        <ProcBodyOp>
            <VarDeclOp>
                <Type>int</Type>
                <IdInitOp>
                    <Identifier>count</Identifier>
                    <IntConst>1</IntConst>
                </IdInitOp>
            </VarDeclOp>
            <VarDeclOp>
                <Type>int</Type>
                <IdInitOp>
                    <Identifier>result</Identifier>
                </IdInitOp>
            </VarDeclOp>
            <IfOp>
                <OrOp>
                    <EQOp>
                        <Identifier>y</Identifier>
                        <IntConst>0</IntConst>
                    </EQOp>
                    <EQOp>
                        <Identifier>x</Identifier>
                        <IntConst>0</IntConst>
                    </EQOp>
                </OrOp>
                <BodyOp>
                    <AssignOp>
                        <Identifiers>
                            <Identifier>result</Identifier>
                        </Identifiers>
                        <Exprs>
                            <IntConst>0</IntConst>
                        </Exprs>
                    </AssignOp>
                </BodyOp>
                <BodyOp>
                    <AssignOp>
                        <Identifiers>
                            <Identifier>result</Identifier>
                        </Identifiers>
                        <Exprs>
                            <Identifier>x</Identifier>
                        </Exprs>
                    </AssignOp>
                    <WhileOp>
                        <LTOp>
                            <Identifier>count</Identifier>
                            <Identifier>y</Identifier>
                        </LTOp>
                        <BodyOp>
                            <AssignOp>
                                <Identifiers>
                                    <Identifier>result</Identifier>
                                </Identifiers>
                                <Exprs>
                                    <CallProcOp>
                                        <Identifier>somma</Identifier>
                                        <Identifier>result</Identifier>
                                        <Identifier>x</Identifier>
                                    </CallProcOp>
                                </Exprs>
                            </AssignOp>
                            <AssignOp>
                                <Identifiers>
                                    <Identifier>count</Identifier>
                                </Identifiers>
                                <Exprs>
                                    <AddOp>
                                        <Identifier>count</Identifier>
                                        <IntConst>1</IntConst>
                                    </AddOp>
                                </Exprs>
                            </AssignOp>
                        </BodyOp>
                    </WhileOp>
                </BodyOp>
            </IfOp>
            <Identifier>result</Identifier>
        </ProcBodyOp>
    </ProcOp>
    <ProcOp>
        <Identifier>dividi</Identifier>
        <ParDeclOp>
            <Type>int</Type>
            <Identifier>x</Identifier>
            <Identifier>y</Identifier>
        </ParDeclOp>
        <ResultType>int</ResultType>
        <ProcBodyOp>
            <DivOp>
                <Identifier>x</Identifier>
                <Identifier>y</Identifier>
            </DivOp>
        </ProcBodyOp>
    </ProcOp>
    <ProcOp>
        <Identifier>potenza</Identifier>
        <ParDeclOp>
            <Type>int</Type>
            <Identifier>x</Identifier>
            <Identifier>y</Identifier>
        </ParDeclOp>
        <ResultType>int</ResultType>
        <ProcBodyOp>
            <VarDeclOp>
                <Type>int</Type>
                <IdInitOp>
                    <Identifier>result</Identifier>
                    <Identifier>x</Identifier>
                </IdInitOp>
                <IdInitOp>
                    <Identifier>count</Identifier>
                    <IntConst>2</IntConst>
                </IdInitOp>
            </VarDeclOp>
            <IfOp>
                <EQOp>
                    <Identifier>y</Identifier>
                    <IntConst>0</IntConst>
                </EQOp>
                <BodyOp>
                    <IfOp>
                        <EQOp>
                            <Identifier>x</Identifier>
                            <IntConst>0</IntConst>
                        </EQOp>
                        <BodyOp>
                            <AssignOp>
                                <Identifiers>
                                    <Identifier>result</Identifier>
                                </Identifiers>
                                <Exprs>
                                    <IntConst>0</IntConst>
                                </Exprs>
                            </AssignOp>
                        </BodyOp>
                        <BodyOp>
                            <AssignOp>
                                <Identifiers>
                                    <Identifier>result</Identifier>
                                </Identifiers>
                                <Exprs>
                                    <IntConst>1</IntConst>
                                </Exprs>
                            </AssignOp>
                        </BodyOp>
                    </IfOp>
                </BodyOp>
                <ElifOp>
                    <GTOp>
                        <Identifier>y</Identifier>
                        <IntConst>1</IntConst>
                    </GTOp>
                    <BodyOp>
                        <WhileOp>
                            <LEOp>
                                <Identifier>count</Identifier>
                                <Identifier>y</Identifier>
                            </LEOp>
                            <BodyOp>
                                <AssignOp>
                                    <Identifiers>
                                        <Identifier>result</Identifier>
                                    </Identifiers>
                                    <Exprs>
                                        <CallProcOp>
                                            <Identifier>moltiplica</Identifier>
                                            <Identifier>result</Identifier>
                                            <Identifier>x</Identifier>
                                        </CallProcOp>
                                    </Exprs>
                                </AssignOp>
                                <AssignOp>
                                    <Identifiers>
                                        <Identifier>count</Identifier>
                                    </Identifiers>
                                    <Exprs>
                                        <AddOp>
                                            <Identifier>count</Identifier>
                                            <IntConst>1</IntConst>
                                        </AddOp>
                                    </Exprs>
                                </AssignOp>
                            </BodyOp>
                        </WhileOp>
                    </BodyOp>
                </ElifOp>
            </IfOp>
            <Identifier>result</Identifier>
        </ProcBodyOp>
    </ProcOp>
    <ProcOp>
        <Identifier>fibonacci</Identifier>
        <ParDeclOp>
            <Type>int</Type>
            <Identifier>x</Identifier>
        </ParDeclOp>
        <ResultType>int</ResultType>
        <ProcBodyOp>
            <VarDeclOp>
                <Type>int</Type>
                <IdInitOp>
                    <Identifier>result</Identifier>
                </IdInitOp>
            </VarDeclOp>
            <IfOp>
                <EQOp>
                    <Identifier>x</Identifier>
                    <IntConst>0</IntConst>
                </EQOp>
                <BodyOp>
                    <AssignOp>
                        <Identifiers>
                            <Identifier>result</Identifier>
                        </Identifiers>
                        <Exprs>
                            <IntConst>0</IntConst>
                        </Exprs>
                    </AssignOp>
                </BodyOp>
                <ElifOp>
                    <EQOp>
                        <Identifier>x</Identifier>
                        <IntConst>1</IntConst>
                    </EQOp>
                    <BodyOp>
                        <AssignOp>
                            <Identifiers>
                                <Identifier>result</Identifier>
                            </Identifiers>
                            <Exprs>
                                <IntConst>1</IntConst>
                            </Exprs>
                        </AssignOp>
                    </BodyOp>
                </ElifOp>
                <BodyOp>
                    <AssignOp>
                        <Identifiers>
                            <Identifier>result</Identifier>
                        </Identifiers>
                        <Exprs>
                            <AddOp>
                                <CallProcOp>
                                    <Identifier>fibonacci</Identifier>
                                    <DiffOp>
                                        <Identifier>x</Identifier>
                                        <IntConst>1</IntConst>
                                    </DiffOp>
                                </CallProcOp>
                                <CallProcOp>
                                    <Identifier>fibonacci</Identifier>
                                    <DiffOp>
                                        <Identifier>x</Identifier>
                                        <IntConst>2</IntConst>
                                    </DiffOp>
                                </CallProcOp>
                            </AddOp>
                        </Exprs>
                    </AssignOp>
                </BodyOp>
            </IfOp>
            <Identifier>result</Identifier>
        </ProcBodyOp>
    </ProcOp>
    <ProcOp>
        <Identifier>input</Identifier>
        <ParDeclOp>
            <Type>int</Type>
            <Identifier>op</Identifier>
        </ParDeclOp>
        <ResultType>int</ResultType>
        <ResultType>int</ResultType>
        <ProcBodyOp>
            <VarDeclOp>
                <Type>int</Type>
                <IdInitOp>
                    <Identifier>a</Identifier>
                    <IntConst>0</IntConst>
                </IdInitOp>
                <IdInitOp>
                    <Identifier>b</Identifier>
                    <IntConst>0</IntConst>
                </IdInitOp>
            </VarDeclOp>
            <IfOp>
                <AndOp>
                    <GEOp>
                        <Identifier>op</Identifier>
                        <IntConst>1</IntConst>
                    </GEOp>
                    <LEOp>
                        <Identifier>op</Identifier>
                        <IntConst>3</IntConst>
                    </LEOp>
                </AndOp>
                <BodyOp>
                    <WriteOp>
                        <StringConst>"\nInserisci primo operando: "</StringConst>
                    </WriteOp>
                    <ReadOp>
                        <Identifier>a</Identifier>
                    </ReadOp>
                    <WriteOp>
                        <StringConst>"Inserisci secondo operando: "</StringConst>
                    </WriteOp>
                    <ReadOp>
                        <Identifier>b</Identifier>
                    </ReadOp>
                </BodyOp>
                <ElifOp>
                    <EQOp>
                        <Identifier>op</Identifier>
                        <IntConst>4</IntConst>
                    </EQOp>
                    <BodyOp>
                        <WriteOp>
                            <StringConst>"\nInserisci la base: "</StringConst>
                        </WriteOp>
                        <ReadOp>
                            <Identifier>a</Identifier>
                        </ReadOp>
                        <WriteOp>
                            <StringConst>"Inserisci l'esponente: "</StringConst>
                        </WriteOp>
                        <ReadOp>
                            <Identifier>b</Identifier>
                        </ReadOp>
                    </BodyOp>
                </ElifOp>
                <ElifOp>
                    <EQOp>
                        <Identifier>op</Identifier>
                        <IntConst>5</IntConst>
                    </EQOp>
                    <BodyOp>
                        <WriteOp>
                            <StringConst>"\nInserisci il numero su cui calcolare la successione di fibonacci: "</StringConst>
                        </WriteOp>
                        <ReadOp>
                            <Identifier>a</Identifier>
                        </ReadOp>
                    </BodyOp>
                </ElifOp>
            </IfOp>
            <Identifier>a</Identifier>
            <Identifier>b</Identifier>
        </ProcBodyOp>
    </ProcOp>
    <ProcOp>
        <Identifier>main</Identifier>
        <ProcBodyOp>
            <VarDeclOp>
                <Type>int</Type>
                <IdInitOp>
                    <Identifier>x</Identifier>
                    <IntConst>0</IntConst>
                </IdInitOp>
                <IdInitOp>
                    <Identifier>y</Identifier>
                    <IntConst>0</IntConst>
                </IdInitOp>
                <IdInitOp>
                    <Identifier>op</Identifier>
                    <IntConst>0</IntConst>
                </IdInitOp>
            </VarDeclOp>
            <WhileOp>
                <BodyOp>
                    <WriteOp>
                        <StringConst>" 1. addizione\n 2. moltiplicazione\n 3. divisione\n 4. elevamento a potenza\n 5. fibonacci\n 6. esci\nInserisci il numero dell'operazione: "</StringConst>
                    </WriteOp>
                    <ReadOp>
                        <Identifier>op</Identifier>
                    </ReadOp>
                </BodyOp>
                <NEOp>
                    <Identifier>op</Identifier>
                    <IntConst>6</IntConst>
                </NEOp>
                <BodyOp>
                    <AssignOp>
                        <Identifiers>
                            <Identifier>x</Identifier>
                            <Identifier>y</Identifier>
                        </Identifiers>
                        <Exprs>
                            <CallProcOp>
                                <Identifier>input</Identifier>
                                <Identifier>op</Identifier>
                            </CallProcOp>
                        </Exprs>
                    </AssignOp>
                    <IfOp>
                        <EQOp>
                            <Identifier>op</Identifier>
                            <IntConst>1</IntConst>
                        </EQOp>
                        <BodyOp>
                            <WriteOp>
                                <StringConst>"Il risultato della somma è: "</StringConst>
                                <CallProcOp>
                                    <Identifier>somma</Identifier>
                                    <Identifier>x</Identifier>
                                    <Identifier>y</Identifier>
                                </CallProcOp>
                                <StringConst>"\n\n"</StringConst>
                            </WriteOp>
                        </BodyOp>
                        <ElifOp>
                            <EQOp>
                                <Identifier>op</Identifier>
                                <IntConst>2</IntConst>
                            </EQOp>
                            <BodyOp>
                                <WriteOp>
                                    <StringConst>"Il risultato della moltiplicazione è: "</StringConst>
                                    <CallProcOp>
                                        <Identifier>moltiplica</Identifier>
                                        <Identifier>x</Identifier>
                                        <Identifier>y</Identifier>
                                    </CallProcOp>
                                    <StringConst>"\n\n"</StringConst>
                                </WriteOp>
                            </BodyOp>
                        </ElifOp>
                        <ElifOp>
                            <EQOp>
                                <Identifier>op</Identifier>
                                <IntConst>3</IntConst>
                            </EQOp>
                            <BodyOp>
                                <WriteOp>
                                    <StringConst>"Il risultato della divisione è: "</StringConst>
                                    <CallProcOp>
                                        <Identifier>dividi</Identifier>
                                        <Identifier>x</Identifier>
                                        <Identifier>y</Identifier>
                                    </CallProcOp>
                                    <StringConst>"\n\n"</StringConst>
                                </WriteOp>
                            </BodyOp>
                        </ElifOp>
                        <ElifOp>
                            <EQOp>
                                <Identifier>op</Identifier>
                                <IntConst>4</IntConst>
                            </EQOp>
                            <BodyOp>
                                <WriteOp>
                                    <StringConst>"Il risultato dell'elevamento a potenza è: "</StringConst>
                                    <CallProcOp>
                                        <Identifier>potenza</Identifier>
                                        <Identifier>x</Identifier>
                                        <Identifier>y</Identifier>
                                    </CallProcOp>
                                    <StringConst>"\n\n"</StringConst>
                                </WriteOp>
                            </BodyOp>
                        </ElifOp>
                        <ElifOp>
                            <EQOp>
                                <Identifier>op</Identifier>
                                <IntConst>5</IntConst>
                            </EQOp>
                            <BodyOp>
                                <WriteOp>
                                    <StringConst>"Il risultato di fibonacci è: "</StringConst>
                                    <CallProcOp>
                                        <Identifier>fibonacci</Identifier>
                                        <Identifier>x</Identifier>
                                    </CallProcOp>
                                    <StringConst>"\n\n"</StringConst>
                                </WriteOp>
                            </BodyOp>
                        </ElifOp>
                        <BodyOp>
                            <WriteOp>
                                <StringConst>"Numero operazione non presente, inserisci un numero che sia compreso tra 1 e 6\n\n"</StringConst>
                            </WriteOp>
                        </BodyOp>
                    </IfOp>
                </BodyOp>
            </WhileOp>
        </ProcBodyOp>
    </ProcOp>
</ProgramOP>
